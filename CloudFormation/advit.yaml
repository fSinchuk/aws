# Â© 2019 Fedir Sinchuk
# mail: fedir.sinchuk@outlook.com
# linkedin: https://www.linkedin.com/in/sfed0r/
AWSTemplateFormatVersion: "2010-09-09"
Mappings: 
  RegionMap: 
    ap-southeast-2: 
      HVM64: "ami-8a3f9ae8"
    us-west-1: 
      HVM64: "ami-0bdb828fd58c52235"

Parameters: 
  VpcIdParameter:
    Type: AWS::EC2::VPC::Id
    Description: Your VPC

  SubnetsParameters:
      Type: List<AWS::EC2::Subnet::Id>
      Description: Allowed list of subnets

  SSHKeyParameter:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Your SSH key

  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
    Description: EC2 instance type
Resources:
  #-----------------------------------------------------------------------
  ADVITSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcIdParameter
      GroupDescription: Enable SSH via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        -
          Key: Name
          Value: Security group for ADV-IT
  #-----------------------------------------------------------------------
  ADVITLeastPrevilegeRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: 2012-10-17
        Statement: 
          - 
            Effect: Allow
            Principal: 
              Service: 
                - ec2.amazonaws.com
            Action: 
              - sts:AssumeRole
      Path: /
  #-----------------------------------------------------------------------
  ADVITRolePolicies: 
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: ADVITRolePolicies
      PolicyDocument: 
        Version: 2012-10-17
        Statement: 
          - 
            Effect: Deny
            Action: '*'
            Resource: '*'
      Roles: 
        - 
          Ref: ADVITLeastPrevilegeRole
  #-----------------------------------------------------------------------
  ADVITInstanceProfile: 
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: "/"
      Roles: [ Ref: 'ADVITLeastPrevilegeRole' ]
  #-----------------------------------------------------------------------

  # ADVITLaunchTemplate:
  #   Type: AWS::EC2::LaunchTemplate
  #   Properties: 
  #     LaunchTemplateName: !Sub ${AWS::StackName}-launch-template
  #     LaunchTemplateData: 
  #       CreditSpecification: 
  #         CpuCredits: Unlimited
  #       ImageId: !FindInMap [ RegionMap, !Ref "AWS::Region", HVM64 ]
  #       InstanceType: !Ref InstanceTypeParameter
  #       IamInstanceProfile:
  #          Arn: !Ref ADVITInstanceProfile
  #          Name: ADVIT Instance Profile
  #       KeyName: !Ref SSHKeyParameter
  #      
  #       Monitoring: 
  #         Enabled: true
  #       SecurityGroupIds: 
  #         - !Ref ADVITSecurityGroup  
  #-----------------------------------------------------------------------

  # ADVITLoadBalancer:
  #   Type: AWS::ElasticLoadBalancing::LoadBalancer
  #   Properties:
  #     Subnets: !Ref 'SubnetsParameters'
  #     CrossZone: 'true'
  #     Listeners:
  #     - LoadBalancerPort: '80'
  #       InstancePort: '80'
  #       Protocol: HTTP
  #     HealthCheck:
  #       Target: HTTP:80/
  #       HealthyThreshold: '3'
  #       UnhealthyThreshold: '5'
  #       Interval: '30'
  #       Timeout: '5'
  #     ConnectionDrainingPolicy:
  #       Enabled: 'true'
  #       Timeout: '300'
  #     Tags:
  #       -
  #         Key: Name
  #         Value: ADV-IT load balancer
  #------------------------------------------------------------------------
  ADVITAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs ''
      #LoadBalancerNames: [!Ref 'ADVITLoadBalancer']
      Cooldown: 900
        #InstanceId: !Ref Ec2Instance
      #DesiredCapacity: 1
      MaxSize: 1
      MinSize: 1
      Tags:
        -
          Key: Name
          Value: ADV-IT auto re-run instance
          PropagateAtLaunch: 'true'
      VPCZoneIdentifier: !Ref 'SubnetsParameters'
      InstanceId: !Ref 'ADVITEc2Instance'
      # LaunchTemplate:
      #   LaunchTemplateId: !Ref ADVITLaunchTemplate
      #   Version: !GetAtt ADVITLaunchTemplate.LatestVersionNumber
  #--------------------------------------------------------------------------
  ADVITEc2Instance: 
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeParameter
      ImageId: ami-8a3f9ae8
      SecurityGroupIds: [ Ref: ADVITSecurityGroup]
      IamInstanceProfile: !Ref ADVITInstanceProfile
      SubnetId: !Select [0, Ref: 'SubnetsParameters']
      UserData: !Base64
        Fn::Join:
          - ''
          - [IPAddress=, !Ref 'ADVITIPAddress']
      Tags:
        -
          Key: Name
          Value: IDV-IT EC2
        -
          Key: Region
          Value: !Join
            - ""
            - - "EC2 region: "
              - !Ref AWS::Region
  #--------------------------------------------------------------------------
  ADVITIPAddress:
    Type: AWS::EC2::EIP
  ADVITIPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref 'ADVITEc2Instance'
      EIP: !Ref 'ADVITIPAddress'